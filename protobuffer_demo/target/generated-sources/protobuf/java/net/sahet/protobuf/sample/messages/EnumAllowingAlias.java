// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf3_samples.proto

// Protobuf Java Version: 3.25.2
package net.sahet.protobuf.sample.messages;

/**
 * Protobuf enum {@code mySearchNS.EnumAllowingAlias}
 */
public enum EnumAllowingAlias
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>EAA_UNSPECIFIED = 0;</code>
   */
  EAA_UNSPECIFIED(0, 0),
  /**
   * <code>EAA_STARTED = 1;</code>
   */
  EAA_STARTED(1, 1),
  /**
   * <code>EAA_FINISHED = 2;</code>
   */
  EAA_FINISHED(3, 2),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>EAA_RUNNING = 1;</code>
   */
  public static final EnumAllowingAlias EAA_RUNNING = EAA_STARTED;
  /**
   * <code>EAA_UNSPECIFIED = 0;</code>
   */
  public static final int EAA_UNSPECIFIED_VALUE = 0;
  /**
   * <code>EAA_STARTED = 1;</code>
   */
  public static final int EAA_STARTED_VALUE = 1;
  /**
   * <code>EAA_RUNNING = 1;</code>
   */
  public static final int EAA_RUNNING_VALUE = 1;
  /**
   * <code>EAA_FINISHED = 2;</code>
   */
  public static final int EAA_FINISHED_VALUE = 2;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EnumAllowingAlias valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EnumAllowingAlias forNumber(int value) {
    switch (value) {
      case 0: return EAA_UNSPECIFIED;
      case 1: return EAA_STARTED;
      case 2: return EAA_FINISHED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EnumAllowingAlias>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EnumAllowingAlias> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EnumAllowingAlias>() {
          public EnumAllowingAlias findValueByNumber(int number) {
            return EnumAllowingAlias.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (index == -1) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return net.sahet.protobuf.sample.messages.Protobuf3Samples.getDescriptor().getEnumTypes().get(1);
  }

  private static final EnumAllowingAlias[] VALUES = getStaticValuesArray();
  private static EnumAllowingAlias[] getStaticValuesArray() {
    return new EnumAllowingAlias[] {
    EAA_UNSPECIFIED, EAA_STARTED, EAA_RUNNING, EAA_FINISHED, 
    };
  }
  public static EnumAllowingAlias valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private EnumAllowingAlias(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:mySearchNS.EnumAllowingAlias)
}

